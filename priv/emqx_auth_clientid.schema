%%-*- mode: erlang -*-
%% emqx_auth_clientid config mapping

{mapping, "auth.client.$id.clientid", "emqx_auth_clientid.client_list", [
  {datatype, string}
]}.

{mapping, "auth.client.$id.password", "emqx_auth_clientid.client_list", [
  {datatype, string}
]}.

{mapping, "auth.client.password_hash", "emqx_auth_clientid.password_hash", [
  {datatype, string}
]}.

{translation, "emqx_auth_clientid.client_list", fun(Conf) ->
  ClientList = cuttlefish_variable:filter_by_prefix("auth.client", Conf),
  lists:foldl(
  	fun({["auth", "client", Id, "clientid"], ClientId}, AccIn) ->
        [{ClientId, cuttlefish:conf_get("auth.client." ++ Id ++ ".password", Conf)} | AccIn];
       (_, AccIn) ->
        AccIn
  	end, [], ClientList)
end}.

{translation, "emqx_auth_clientid.password_hash", fun(Conf) ->
  PasswordHash = cuttlefish:conf_get("auth.client.password_hash", Conf),
  HashValue =
    case string:tokens(PasswordHash, ",") of
          [Hash]           -> list_to_atom(Hash);
          [Prefix, Suffix] -> {list_to_atom(Prefix), list_to_atom(Suffix)};
          [Hash, MacFun, Iterations, Dklen] -> {list_to_atom(Hash), list_to_atom(MacFun), list_to_integer(Iterations), list_to_integer(Dklen)};
          _                -> plain
    end
end}.